<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.luv2code.springdemo</groupId>
	<artifactId>spring-crm-rest</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>


	<properties>
		<springframework.version>5.0.6.RELEASE</springframework.version>
		<hibernate.version>5.5.0.Final</hibernate.version>
		<mysql.connector.version>8.0.25</mysql.connector.version>
		<c3po.version>0.9.5.5</c3po.version>

		<maven.compiler.source>1.11</maven.compiler.source>
		<maven.compiler.target>1.11</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- MVC and REST support-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

<!-- we are using transactions, because we want to use Hibernate in the background to process our data requests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		
		<!-- ORM support-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- Add Jackson for conversion JAVA POJO to JSON and JSON to JAVA POJO -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.9.2</version>
		</dependency>

		<!-- Hibernate for ORM mapping and storageing our data to db-->
		<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-core</artifactId>
			  <version>${hibernate.version}</version>
		</dependency>

		<!-- MySQL jdbc driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<!-- C3PO IS CONNECTION POOLING FRAMEWORK FOR MANAGING CONNECTIONS OF DB-->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3po.version}</version>
		</dependency>

		<!-- Servlet API, BECAUSE SPRING MVC USES THE SERVLET API IN THE BACKGROUND.
		WE ARE USING JSP PAGES (VIEWS) IN OUR PROJECT.WE DON'T NEED JSTL FOR THIS PROJECT -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<!-- to compensate for java 9+ not including jaxb
		THAT IS THE ARCHITECTURE THAT PROVIDES API FOR AUTOMATIC MAPPING OF XML OBJECTS TO JAVA OBJECTS 
		AND JAVA OBJECTS TO XML. -->
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.3.0</version>
		</dependency>

	</dependencies>

	<build>

<!-- IN THIS BUILD SECTION WE SET NAME OF OUR .WAR FILE spring-crm-rest.war-->
		<finalName>spring-crm-rest</finalName>

		<plugins>
				
			<!-- The WAR Plugin is responsible for collecting all artifact dependencies, classes 
			and resources of the web application and packaging them into a web application archive.
			Add Maven coordinates (GAV) for: maven-war-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>

		</plugins>
	</build>
</project>

